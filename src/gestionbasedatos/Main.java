/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestionbasedatos;

import entities.Editoriales;
import renderer.ModeloTabla;
import entities.Libros;
import java.awt.event.KeyEvent;
import renderer.PrecioRenderer;
import renderer.AgotandoseRenderer;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import renderer.FechaRenderer;

/**
 *
 * @author Raul
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    ModeloTabla modelo = new ModeloTabla();
    boolean esNuevo = false;
    Libros libro = null;

    private void activarCampos(boolean activar) {

        datosLibros1.activarCampos(activar);
        b_Guardar.setEnabled(activar);
        b_Cancelar.setEnabled(activar);
        datosLibros1.activarBEditoriales(activar);

        b_Nuevo.setEnabled(!activar);
        b_Editar.setEnabled(!activar);
        b_Borrar.setEnabled(!activar);

        if (activar) {
            datosLibros1.setfocus();
        }
    }

    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        modelo.setDataList(list1);
        jTable1.setModel(modelo);
        activarCampos(false);
        //Establece el boton buscar por defecto de forma general
        //getRootPane().setDefaultButton(b_Buscar); 
        //Solo se permite seleccionar un registro
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(new PrecioRenderer());
        jTable1.getColumnModel().getColumn(5).setCellRenderer(new AgotandoseRenderer());
        jTable1.getColumnModel().getColumn(4).setCellRenderer(new FechaRenderer());

        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                //S칩lo hay una fila seleccionada 
                if (jTable1.getSelectedRow() != -1) {
                    int indiceFilaSeleccionada = jTable1.getSelectedRow();
                    Libros lib = list1.get(indiceFilaSeleccionada);
                    datosLibros1.setLibro(lib);
                    datosLibros1.showDates();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager1 = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("GestionBaseDatosPU").createEntityManager();
        query1 = java.beans.Beans.isDesignTime() ? null : entityManager1.createQuery("SELECT l FROM Libros l");
        list1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : query1.getResultList();
        jPanel1 = new javax.swing.JPanel();
        datosLibros1 = new gestionbasedatos.DatosLibros();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        b_Nuevo = new javax.swing.JButton();
        b_Editar = new javax.swing.JButton();
        b_Borrar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextFieldBuscar = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        b_Buscar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        b_LimpiarBusqueda = new javax.swing.JButton();
        b_Cancelar = new javax.swing.JButton();
        b_Guardar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(818, 562));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        b_Nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuevo.png"))); // NOI18N
        b_Nuevo.setFocusable(false);
        b_Nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b_Nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        b_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_NuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(b_Nuevo);

        b_Editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        b_Editar.setFocusable(false);
        b_Editar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b_Editar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        b_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_EditarActionPerformed(evt);
            }
        });
        jToolBar1.add(b_Editar);

        b_Borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrar.png"))); // NOI18N
        b_Borrar.setFocusable(false);
        b_Borrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b_Borrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        b_Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_BorrarActionPerformed(evt);
            }
        });
        jToolBar1.add(b_Borrar);

        jSeparator1.setMinimumSize(new java.awt.Dimension(2, 0));
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 2));
        jToolBar1.add(jSeparator1);

        jLabel1.setText("Buscar por:");
        jToolBar1.add(jLabel1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Titulo", "Autor", "Precio menor que", "Precio mayor que", "A침o de Edici칩n" }));
        jToolBar1.add(jComboBox1);

        jTextFieldBuscar.setPreferredSize(new java.awt.Dimension(260, 50));
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyPressed(evt);
            }
        });
        jToolBar1.add(jTextFieldBuscar);
        jToolBar1.add(jSeparator2);

        b_Buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        b_Buscar.setBorder(null);
        b_Buscar.setFocusable(false);
        b_Buscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b_Buscar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        b_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_BuscarActionPerformed(evt);
            }
        });
        jToolBar1.add(b_Buscar);
        jToolBar1.add(jSeparator3);

        b_LimpiarBusqueda.setText("Limpiar busqueda");
        b_LimpiarBusqueda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_LimpiarBusqueda.setFocusable(false);
        b_LimpiarBusqueda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b_LimpiarBusqueda.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        b_LimpiarBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_LimpiarBusquedaActionPerformed(evt);
            }
        });
        jToolBar1.add(b_LimpiarBusqueda);

        b_Cancelar.setText("Cancelar");
        b_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_CancelarActionPerformed(evt);
            }
        });

        b_Guardar.setText("Guardar");
        b_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_GuardarActionPerformed(evt);
            }
        });

        jButton1.setText("A침adir Editorial");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(datosLibros1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_Guardar)
                            .addComponent(b_Cancelar)
                            .addComponent(jButton1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(b_Guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_Cancelar)
                        .addGap(23, 23, 23)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(datosLibros1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_GuardarActionPerformed
        if (!datosLibros1.isCamposVacios()) {
            //Modificar valores de las propiedades del objeto Libro

            libro = datosLibros1.setDatos();
            int idEditorial = datosLibros1.getEditorial().getIdEditorial();
            Editoriales editorial = entityManager1.find(Editoriales.class, idEditorial);
            libro.setIdEditorial(editorial);

            if (esNuevo) {
//                int idProducto = datosLibros1.getEditorial().getId();
//                Editoriales editorial = entityManager1.find(Editoriales.class, idProducto);
//                System.out.println(editorial.getNombre());
                entityManager1.getTransaction().begin();
                //Almacenar el objeto en la BD
                entityManager1.persist(libro);
                entityManager1.getTransaction().commit();
                //A침adir un nuevo libro al final de la lista
                list1.add(libro);
                modelo.fireTableRowsInserted(list1.size() - 1, list1.size() - 1);
            } else {
                //Cambiar el libro que se encuentra seleccionado en la lista
                int selectedRow = jTable1.getSelectedRow();
                entityManager1.getTransaction().begin();
                //Actualizar el objeto en la BD
                entityManager1.merge(libro);
                entityManager1.getTransaction().commit();
                //A침adir el objeto donde estaba el objeto anterior
                list1.set(selectedRow, libro);
                //Informar al JTable que se ha modificado la fila seleccionada
                modelo.fireTableRowsUpdated(selectedRow, selectedRow);
            }

            //Desactivar los campos de edici칩n y activar los botones de men칰 y lista
            activarCampos(false);
            //Dejar los campos vac칤os
            datosLibros1.limpiarCampos();
            //Desbloquear la tabla
            jTable1.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this,
                    "No se puede dejar campos vacios",
                    "Atenci칩n", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_b_GuardarActionPerformed

    private void b_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_CancelarActionPerformed
        //Desactivar los campos de edici칩n y activar los botones de men칰 y lista
        activarCampos(false);
        //Dejar los campos vac칤os
        datosLibros1.limpiarCampos();
        //Desbloquear la tabla
        jTable1.setEnabled(true);
    }//GEN-LAST:event_b_CancelarActionPerformed

    private void b_BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_BorrarActionPerformed
        //Comprobar si hay algun libro seleccionado en la lista
        if (jTable1.getSelectedRow() != -1) {
            //Obtener la fila que se encuentra seleccionado en la lista
            int selectedRow = jTable1.getSelectedRow();
            libro = list1.get(selectedRow);
            int respuesta = JOptionPane.showConfirmDialog(this,
                    "Confirme que desea borrar el libro:\n" + libro.getTitulo(),
                    "Borrar libro",
                    JOptionPane.OK_CANCEL_OPTION);
            if (respuesta == JOptionPane.OK_OPTION) {
                //Borra libro de la base de datos y de la tabla
                //Iniciar una transacci칩n con la BD
                entityManager1.getTransaction().begin();
                //Eliminar el objeto
                entityManager1.remove(libro);
                //Finalizar la transacci칩n actualizando la BD
                entityManager1.getTransaction().commit();
                //Eliminar el objeto de la lista de datos 
                list1.remove(libro);
                //Informar al JTable que se ha eliminado una fila
                modelo.fireTableRowsDeleted(selectedRow, selectedRow);
                datosLibros1.limpiarCampos();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un libro",
                    "Atenci칩n",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_b_BorrarActionPerformed

    private void b_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_EditarActionPerformed
        //Comprobar si hay alguna pel칤cula seleccionada en la lista
        if (jTable1.getSelectedRow() != -1) {
            //Activar los campos de edici칩n y desactivar los botones de men칰 y lista
            activarCampos(true);
            //Distinguir que no es una pel칤cula nueva para el momento de guardala
            esNuevo = false;
            //Bloquear la tabla
            jTable1.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar una pel칤cula",
                    "Atenci칩n",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_b_EditarActionPerformed

    private void b_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_NuevoActionPerformed
        //Activar los campos de edici칩n y desactivar los botones de men칰 y lista
        activarCampos(true);
        datosLibros1.limpiarCampos();
        esNuevo = true;
        libro = new Libros();
        //Bloquear la tabla
        jTable1.setEnabled(false);
    }//GEN-LAST:event_b_NuevoActionPerformed

    private void b_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_BuscarActionPerformed
        //Obtener el dato a buscar y el campo
        String datoBuscar = jTextFieldBuscar.getText();
        int campo = jComboBox1.getSelectedIndex();
        String consulta;
        switch (campo) {
            case 0:
                consulta = "SELECT l FROM Libros l WHERE l.titulo like '%" + datoBuscar + "%'";
                break;
            case 1:
                consulta = "SELECT l FROM Libros l WHERE l.autores like '%" + datoBuscar + "%'";
                break;
            case 2:
                consulta = "SELECT l FROM Libros l WHERE l.pvpsiniva <" + datoBuscar;
                break;
            case 3:
                consulta = "SELECT l FROM Libros l WHERE l.pvpsiniva >" + datoBuscar;
                break;
            case 4:
                consulta = "SELECT l FROM Libros l WHERE l.fechaEdicion like '%" + datoBuscar + "%'";
                break;
            default:
                throw new AssertionError();
        }
        //Obtener la consulta que buscara todos los titulo que contengan la palabra a buscar

        //Mostras solo las filas que contengan la busqueda en el titulo
        query1 = entityManager1.createQuery(consulta);
        list1 = query1.getResultList();
        modelo.setDataList(list1);
        //actualizar los cambios en la tabla
        modelo.fireTableDataChanged();
        //Limpiar campos de texto
        datosLibros1.limpiarCampos();
    }//GEN-LAST:event_b_BuscarActionPerformed

    private void b_LimpiarBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_LimpiarBusquedaActionPerformed
        //Modificar la consulta para que salgan todos los libros
        query1 = entityManager1.createQuery("SELECT l FROM Libros l");
        list1 = query1.getResultList();
        modelo.setDataList(list1);
        //actualizar los cambios en la tabla
        modelo.fireTableDataChanged();
        //Limpiar campo de busqueda
        jTextFieldBuscar.setText("");
        datosLibros1.limpiarCampos();
    }//GEN-LAST:event_b_LimpiarBusquedaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(this,
                "Disponible en la pr칩xima versi칩n",
                "Informaci칩n",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            b_Buscar.doClick();
        }
    }//GEN-LAST:event_jTextFieldBuscarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_Borrar;
    private javax.swing.JButton b_Buscar;
    private javax.swing.JButton b_Cancelar;
    private javax.swing.JButton b_Editar;
    private javax.swing.JButton b_Guardar;
    private javax.swing.JButton b_LimpiarBusqueda;
    private javax.swing.JButton b_Nuevo;
    private gestionbasedatos.DatosLibros datosLibros1;
    private javax.persistence.EntityManager entityManager1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JToolBar jToolBar1;
    private java.util.List<Libros> list1;
    private javax.persistence.Query query1;
    // End of variables declaration//GEN-END:variables
}
